{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Arif/Downloads/My%20Nextjs%20Project/text-canvas/text-canvas/frontend/src/components/SocketTest.js"],"sourcesContent":["// // // socketTest.js\r\n// // import { io } from \"socket.io-client\";\r\n\r\n// // // Connect to backend socket server\r\n// // const socket = io(\"http://localhost:5000\");\r\n\r\n// // // When connected\r\n// // socket.on(\"connect\", () => {\r\n// //   console.log(\"✅ Connected to backend socket with ID:\", socket.id);\r\n// // });\r\n\r\n// // // When disconnected\r\n// // socket.on(\"disconnect\", () => {\r\n// //   console.log(\"❌ Disconnected from backend socket\");\r\n// // });\r\n\r\n// // // Listen to custom events from backend\r\n// // socket.on(\"welcome\", (msg) => {\r\n// //   console.log(\"📩 Message from server:\", msg);\r\n// // });\r\n\r\n// // export default socket;\r\n\r\n// // socketTest.js\r\n\r\n// // export default socket;\r\n\r\n// import { io } from \"socket.io-client\";\r\n// import React from \"react\";\r\n\r\n// const SocketTest = () => {\r\n//   // Connect to backend socket server\r\n//   const socket = io(\"http://localhost:5000\");\r\n\r\n//   // When connected\r\n//   socket.on(\"connect\", () => {\r\n//     console.log(\"✅ Connected to backend socket with ID:\", socket.id);\r\n//   });\r\n\r\n//   // When disconnected\r\n//   socket.on(\"disconnect\", () => {\r\n//     console.log(\"❌ Disconnected from backend socket\");\r\n//   });\r\n\r\n//   // Listen to custom events from backend\r\n//   socket.on(\"welcome\", (msg) => {\r\n//     console.log(\"📩 Message from server:\", msg);\r\n//   });\r\n\r\n//   return <div>socket frontend test</div>;\r\n// };\r\n\r\n// export default SocketTest;\r\n\r\n\"use client\"; // required for Next.js app router\r\n\r\nimport { useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nlet socket; // keep a single instance\r\n\r\nconst SocketTest = () => {\r\n  useEffect(() => {\r\n    // Initialize connection\r\n    socket = io(\"http://localhost:5000\");\r\n\r\n    // When connected\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"✅ Connected to backend socket with ID:\", socket.id);\r\n    });\r\n\r\n    // When disconnected\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(\"❌ Disconnected from backend socket\");\r\n    });\r\n\r\n    // Listen to custom events\r\n    socket.on(\"welcome\", (msg) => {\r\n      console.log(\"📩 Message from server:\", msg);\r\n    });\r\n\r\n    // Cleanup: disconnect socket on unmount\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return <div>socket frontend test</div>;\r\n};\r\n\r\nexport default SocketTest;\r\n"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,4CAA4C;AAE5C,yCAAyC;AACzC,iDAAiD;AAEjD,uBAAuB;AACvB,kCAAkC;AAClC,yEAAyE;AACzE,SAAS;AAET,0BAA0B;AAC1B,qCAAqC;AACrC,0DAA0D;AAC1D,SAAS;AAET,6CAA6C;AAC7C,qCAAqC;AACrC,oDAAoD;AACpD,SAAS;AAET,4BAA4B;AAE5B,mBAAmB;AAEnB,4BAA4B;AAE5B,yCAAyC;AACzC,6BAA6B;AAE7B,6BAA6B;AAC7B,wCAAwC;AACxC,gDAAgD;AAEhD,sBAAsB;AACtB,iCAAiC;AACjC,wEAAwE;AACxE,QAAQ;AAER,yBAAyB;AACzB,oCAAoC;AACpC,yDAAyD;AACzD,QAAQ;AAER,4CAA4C;AAC5C,oCAAoC;AACpC,mDAAmD;AACnD,QAAQ;AAER,4CAA4C;AAC5C,KAAK;AAEL,6BAA6B;;;;;;AAI7B;AACA;AAHA,cAAc,kCAAkC;;;;AAKhD,IAAI,QAAQ,yBAAyB;AAErC,MAAM,aAAa;IACjB,IAAA,kNAAS,EAAC;QACR,wBAAwB;QACxB,SAAS,IAAA,8LAAE,EAAC;QAEZ,iBAAiB;QACjB,OAAO,EAAE,CAAC,WAAW;YACnB,QAAQ,GAAG,CAAC,0CAA0C,OAAO,EAAE;QACjE;QAEA,oBAAoB;QACpB,OAAO,EAAE,CAAC,cAAc;YACtB,QAAQ,GAAG,CAAC;QACd;QAEA,0BAA0B;QAC1B,OAAO,EAAE,CAAC,WAAW,CAAC;YACpB,QAAQ,GAAG,CAAC,2BAA2B;QACzC;QAEA,wCAAwC;QACxC,OAAO;YACL,OAAO,UAAU;QACnB;IACF,GAAG,EAAE;IAEL,qBAAO,8OAAC;kBAAI;;;;;;AACd;uCAEe","debugId":null}}]
}